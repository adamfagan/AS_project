{"ast":null,"code":"var _jsxFileName = \"/Users/adamfagan/Documents/skola/AS/riesenie/client/src/Form.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FORM_ENDPOINT = \"http://127.0.0.1:5011/\";\nconst Form = () => {\n  _s();\n  const [picture, setPicture] = useState({});\n  const [prediction, setPrediction] = useState({});\n  const uploadPicture = e => {\n    setPicture({\n      /* contains the preview, if you want to show the picture to the user\n           you can access it with this.state.currentPicture\n       */\n      picturePreview: URL.createObjectURL(e.target.files[0]),\n      /* this contains the file we want to send */\n      pictureAsFile: e.target.files[0]\n    });\n  };\n  const setImageAction = async event => {\n    event.preventDefault();\n    const data = new FormData(event.target);\n\n    /*\n    const result = await fetch(FORM_ENDPOINT, {\n      method: \"POST\",\n      body: data,\n    });\n    const uploadedImage = await result.json();\n    if (uploadedImage) {\n      console.log(\"Successfully uploaded image: \", uploadedImage);\n    } else {\n      console.log(\"Error Found\");\n    }\n    */\n\n    fetch(FORM_ENDPOINT, {\n      method: \"POST\",\n      body: data\n    }).then(res => res.json()).then(prediction => {\n      setPrediction(prediction);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content landing\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: setImageAction,\n      enctype: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        onChange: uploadPicture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: \"upload\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n};\n_s(Form, \"TMsZ5bmrLhVoFTL+JCxtE3bo5rs=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","FORM_ENDPOINT","Form","picture","setPicture","prediction","setPrediction","uploadPicture","e","picturePreview","URL","createObjectURL","target","files","pictureAsFile","setImageAction","event","preventDefault","data","FormData","fetch","method","body","then","res","json"],"sources":["/Users/adamfagan/Documents/skola/AS/riesenie/client/src/Form.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst FORM_ENDPOINT = \"http://127.0.0.1:5011/\";\n\n\nconst Form = () => {\n    const [picture, setPicture] = useState({});\n    const [prediction, setPrediction] = useState({});\n\n    const uploadPicture = (e) => {\n      setPicture({\n        /* contains the preview, if you want to show the picture to the user\n             you can access it with this.state.currentPicture\n         */\n        picturePreview: URL.createObjectURL(e.target.files[0]),\n        /* this contains the file we want to send */\n        pictureAsFile: e.target.files[0],\n      });\n    };\n  \n    const setImageAction = async (event) => {\n      event.preventDefault();\n  \n      const data = new FormData(event.target);\n\n      /*\n      const result = await fetch(FORM_ENDPOINT, {\n        method: \"POST\",\n        body: data,\n      });\n      const uploadedImage = await result.json();\n      if (uploadedImage) {\n        console.log(\"Successfully uploaded image: \", uploadedImage);\n      } else {\n        console.log(\"Error Found\");\n      }\n      */\n\n      fetch(FORM_ENDPOINT, {\n        method: \"POST\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((prediction) => {\n          setPrediction(prediction);\n      });\n    };\n  \n    return (\n      <div className=\"content landing\">\n        <form onSubmit={setImageAction} enctype=\"multipart/form-data\">\n          <input type=\"file\" name=\"file\" onChange={uploadPicture} />\n          <br />\n          <br />\n          <button type=\"submit\" name=\"upload\">\n            Upload\n          </button>\n        </form>\n      </div>\n    );\n  };\n\nexport default Form;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAEjC,MAAMC,aAAa,GAAG,wBAAwB;AAG9C,MAAMC,IAAI,GAAG,MAAM;EAAA;EACf,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEhD,MAAMO,aAAa,GAAIC,CAAC,IAAK;IAC3BJ,UAAU,CAAC;MACT;AACR;AACA;MACQK,cAAc,EAAEC,GAAG,CAACC,eAAe,CAACH,CAAC,CAACI,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;MACtD;MACAC,aAAa,EAAEN,CAAC,CAACI,MAAM,CAACC,KAAK,CAAC,CAAC;IACjC,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,cAAc,GAAG,MAAOC,KAAK,IAAK;IACtCA,KAAK,CAACC,cAAc,EAAE;IAEtB,MAAMC,IAAI,GAAG,IAAIC,QAAQ,CAACH,KAAK,CAACJ,MAAM,CAAC;;IAEvC;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEMQ,KAAK,CAACnB,aAAa,EAAE;MACnBoB,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEJ;IACR,CAAC,CAAC,CACCK,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAElB,UAAU,IAAK;MACpBC,aAAa,CAACD,UAAU,CAAC;IAC7B,CAAC,CAAC;EACJ,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,iBAAiB;IAAA,uBAC9B;MAAM,QAAQ,EAAEU,cAAe;MAAC,OAAO,EAAC,qBAAqB;MAAA,wBAC3D;QAAO,IAAI,EAAC,MAAM;QAAC,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAER;MAAc;QAAA;QAAA;QAAA;MAAA,QAAG,eAC1D;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAQ,IAAI,EAAC,QAAQ;QAAC,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAE1B;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAC,GAvDEL,IAAI;AAAA,KAAJA,IAAI;AAyDV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module"}